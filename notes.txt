file -> new -> spring starter project -> 

	2 dep / lib / jar 
	
		1) spring web
		2) spring boot dev tools
		3) tomcat embeded jaster**** [ you have to get from maven website]  
	
---------------------------------------------------------------

jsp / thymeleaf / rest api 

jsp -> spring -> 
	where we put all the jsp files?
	we will put in webapp/WEB-INF/views folder 
	
	so we need to create three folders 
		1) in main folder create webapp 
		2) in webapp create WEB-INF
		3) in WEB-INF create views 
		
configuration :-
		application.properties
		
	how to write values(configuration) in properties file ?
		ans : key:value 
		
#jsp 
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


jsp will not serve by your serever by default 
we need to add lib for jsp 
	dep name is tomcat-embeded-jasper 

-----------------------------------------------------------------

how to set server port in spring application ?
#server 
server.port=9999

-----------------------------------------------------------------


spring tool suit -> sts -> jsp plugins remove -> 
	Q: how we can install jsp plugins ? 
	ans: help->eclipse market place -> click on popular tab-> 



--------------------------------------------------------------------

how to create controller? 

1) create class-> 
2) use @Controller annotation -> 


where we create controller ? 
	inside controller folder -> 
	java/com/controller 		



spring controller-> method 
			public 
			String :: jsp  
			

-----------------------------------------------------

input two numbers 

addition 

input process output 


input : jsp 
process : method 


jsp open -> method -> @Getmapping 


--------------------------------------------

how to send data from controller to jsp? 

to send data from controller to jsp we used request.setAttribute() in advance java 

in spring we have to use Model interface -> from spring.ui 
	we can create Model instance using argument of the method 

----------------------------------------------
validation -> 
		required 
		length
		regEx 
		
		1) manually -> currency jsp-> 
		2) lib:spring ->sessioncontroller 
		
		
step1 :
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

step2: use annotation for validation inside bean 
		@NotBlank 
		
step3: @Validated used in controller to validate the bean 


step4: use BindingResult in controller to check for errors 
---------------------------------------------------------------------------

10: new project -> 10min
	controller -> input jsp -> process -> validation -> logic -> 20 min 
	total 30 min : 
	
--------------------------------------------------------------------------- 
	 
PG :- 

Mysql :- 
	JAR 
	1) spring jdbc 
	2) mysql connector 
	 
	db configuration 
		url
		username
		password 
		
	query -> JdbcTemplate -> run 
	
		 
----------------------------------------------------------------------------

db : query : spring : JdbcTemplate -> object 

	1) update() : insert , update , delete 
	2) query()  : select -> multiple records 0:N   
	3) queryForObject() : select -> single record {user: userId->17}{email:password}  
		
----------------------------------------------------------------------------	

	






























				